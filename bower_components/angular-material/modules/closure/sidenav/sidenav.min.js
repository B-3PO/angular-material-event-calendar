/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.0-rc.5-master-c447c12
 */
function SidenavService(e,n,o,t){function i(e,t){var i=function(){return!1},r=function(){return o.when(n.supplant(d,[t||""]))};return angular.extend({isLockedOpen:i,isOpen:i,toggle:r,open:r,close:r,onClose:angular.noop,then:function(e){return a(t).then(e||angular.noop)}},e)}function r(o,i){var r=e.get(o);return r||i?r:void t.error(n.supplant(d,[o||""]))}function a(n){return e.when(n)["catch"](t.error)}var d="SideNav '{0}' is not available! Did you use md-component-id='{0}'?",c={find:r,waitFor:a};return function(e,n){if(angular.isUndefined(e))return c;var o=n===!0,t=c.find(e,o);return!t&&o?c.waitFor(e):!t&&angular.isUndefined(n)?i(c,e):t}}function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(e,n,o,t){}}}function SidenavDirective(e,n,o,t,i,r,a,d,c,s){function l(r,l,u,p){function m(e,n){r.isLockedOpen=e,e===n?l.toggleClass("md-locked-open",!!e):i[e?"addClass":"removeClass"](l,"md-locked-open"),S&&S.toggleClass("md-locked-open",!!e)}function f(e){var o=n.findFocusTarget(l)||n.findFocusTarget(l,"[md-sidenav-focus]")||l,t=l.parent();t[e?"on":"off"]("keydown",h),S&&S[e?"on":"off"]("click",C);var a=v(t,e);return e&&(y=s[0].activeElement),g(e),w=c.all([e&&S?i.enter(S,t):S?i.leave(S):c.when(!0),i[e?"removeClass":"addClass"](l,"md-closed")]).then(function(){r.isOpen&&o&&o.focus(),a&&a()})}function v(e,n){var o=l[0],t=e[0].scrollTop;if(n&&t){k={top:o.style.top,bottom:o.style.bottom,height:o.style.height};var i={top:t+"px",bottom:"auto",height:e[0].clientHeight+"px"};l.css(i),S.css(i)}if(!n&&k)return function(){o.style.top=k.top,o.style.bottom=k.bottom,o.style.height=k.height,S[0].style.top=null,S[0].style.bottom=null,S[0].style.height=null,k=null}}function g(e){var n=l.parent();e&&!O?(O=n.css("overflow"),n.css("overflow","hidden")):angular.isDefined(O)&&(n.css("overflow",O),O=void 0)}function $(e){return r.isOpen==e?c.when(!0):(r.isOpen&&p.onCloseCb&&p.onCloseCb(),c(function(o){r.isOpen=e,n.nextTick(function(){w.then(function(e){r.isOpen||(y&&y.focus(),y=null),o(e)})})}))}function h(e){var n=e.keyCode===o.KEY_CODE.ESCAPE;return n?C(e):c.when(!0)}function C(e){return e.preventDefault(),p.close()}var O,S,k,y=null,w=c.when(!0),b=a(u.mdIsLockedOpen),D=function(){return b(r.$parent,{$media:function(n){return d.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."),e(n)},$mdMedia:e})};angular.isDefined(u.mdDisableBackdrop)||(S=n.createBackdrop(r,"md-sidenav-backdrop md-opaque ng-enter")),l.addClass("_md"),t(l),S&&t.inherit(S,l),l.on("$destroy",function(){S&&S.remove(),p.destroy()}),r.$on("$destroy",function(){S&&S.remove()}),r.$watch(D,m),r.$watch("isOpen",f),p.$toggleOpen=$}return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(e){return e.addClass("md-closed"),e.attr("tabIndex","-1"),l}}}function SidenavController(e,n,o,t,i){var r=this;r.isOpen=function(){return!!e.isOpen},r.isLockedOpen=function(){return!!e.isLockedOpen},r.onClose=function(e){return r.onCloseCb=e,r},r.open=function(){return r.$toggleOpen(!0)},r.close=function(){return r.$toggleOpen(!1)},r.toggle=function(){return r.$toggleOpen(!e.isOpen)},r.$toggleOpen=function(n){return i.when(e.isOpen=n)},r.destroy=t.register(r,o.mdComponentId)}goog.provide("ngmaterial.components.sidenav"),goog.require("ngmaterial.components.backdrop"),goog.require("ngmaterial.core"),angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController),SidenavService.$inject=["$mdComponentRegistry","$mdUtil","$q","$log"],SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$animate","$compile","$parse","$log","$q","$document"],SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"],ngmaterial.components.sidenav=angular.module("material.components.sidenav");